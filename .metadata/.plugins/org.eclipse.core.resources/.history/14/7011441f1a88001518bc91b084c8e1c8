/*
	Use comparator to sort an array of string based on their characters
	
	"cba" is greater than "baa"
	"cda" is greater than "cba"
	"cda" is smaller than "cdabd"
	
	descending order
	
*/


//public static Comparator<Fruit> FruitNameComparator 
//                          = new Comparator<Fruit>() {
//
//	    public int compare(Fruit fruit1, Fruit fruit2) {
//	    	
//	      String fruitName1 = fruit1.getFruitName().toUpperCase();
//	      String fruitName2 = fruit2.getFruitName().toUpperCase();
//	      
//	      //ascending order
//	      return fruitName1.compareTo(fruitName2);
//	      
//	      //descending order
//	      //return fruitName2.compareTo(fruitName1);
//	    }
//
//	};

import java.util.*;
public class Solution{
	public static void main(String[] args){
		String[] strings = {"cba","a","","baa","cda","cdabd","addd","zzz"};
		Arrays.sort(strings, StringComparator);
		System.out.println(printString(strings));
	}
	
	public static String printString(String[] string){
		String ans = "";
		for(int i = 0; i < string.length; i++){
			ans += string[i] + " ";
		}
		return ans;
	}
	
	public static Comparator<String> StringComparator = new Comparator<String>(){
		public int compare(String a, String b){
			for(int i = 0; i < Math.min(a.length(), b.length()); i++){
				if(a.charAt(i) < b.charAt(i)) return -1;
				else if(a.charAt(i) > b.charAt(i)) return 1;
			}
			if(a.length() < b.length())
				return -1;
			else
				return 1;
		}
	};
	
	static ArrayList<String> orderByEmployeeID(HashMap<String, String> employeeMap){
		ArrayList<String> ans = new ArrayList<String>();
		ans.addAll(employeeMap.values());
		Collections.sort(ans, IDComparator);
	}
	public static Comparator<String> IDComparator = new Comparator<String>(){
		public int compare(String a, String b){
			for(int i = 0; i < a.length(); i++){
				if(a.charAt(i) < b.charAt(i)) return -1;
				else if(a.charAt(i) > b.charAt(i)) return 1;
			}
			return 0;
		}
	};
}

