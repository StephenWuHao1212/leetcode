/*
	Implement wildcard pattern matching with support for '?' and '*'.
	
	'?' Matches any single character.
	'*' Matches any sequence of characters (including the empty sequence).
	
	The matching should cover the entire input string (not partial).
	
	The function prototype should be:
	bool isMatch(const char *s, const char *p)
	
	Some examples:
	isMatch("aa","a") → false
	isMatch("aa","aa") → true
	isMatch("aaa","aa") → false
	isMatch("aa", "*") → true
	isMatch("aa", "a*") → true
	isMatch("ab", "?*") → true
	isMatch("aab", "c*a*b") → false



	save the position of *
*/


public class Solution {
    public static boolean isMatch(String s, String p) {
    	int starIndex = -1;
    	int iIndex = -1;
    	int i = 0;
    	int j = 0;
    	while(i < s.length()){
    		if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '?'){
    			i++;
    			j++;
    		}
    		else if(p.charAt(j) == '*'){
    			iIndex = i;
    			starIndex = j;
    			j++;
    		}
    		else if(iIndex != -1){
    			j = starIndex + 1;
    			iIndex++;
    			i = iIndex;
    		}
    		else return false;
    	}
    	while(j < p.length()){
    		if(p.charAt(j) != '*') return false;
    		j++;
    	}
    	return true;
    }
    
    public static void main(String[] args){
//    	String p = "*";
    	System.out.println(isMatch("aa", "aa**"));
    }
}