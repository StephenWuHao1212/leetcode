/*
	Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

	Note:
	You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold 
	additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.
	
*/
public class Solution {
    public static void merge(int[] nums1, int m, int[] nums2, int n) {
    	int i = m - 1;
    	int j = n - 1;
    	int k = m + n - 1;
    	while(true){
    		if(j >= 0 && i >= 0){
    			if(nums1[i] > nums2[j]){
    				nums1[k] = nums1[i];
    				k--;i--;
    			}
    			else{
    				nums1[k] = nums2[j];
    				k--;j--;
    			}
    		}
    		else if(j < 0) return;
    		else if(i < 0) {
    			for(;j >= 0; j--,k--){
    				nums1[k] = nums2[j];
    			}
    			return;
    		}
    	}
    }
    public static void main(String[] args){
    	int[] nums1 = new int[8];
    	nums1[0] = 2;
    	nums1[1] = 5;
    	nums1[2] = 6;
    	int[] nums2 = {1,4,9,10,11};
    	merge(nums1, 3, nums2,5);
    	for(int i = 0; i < nums1.length; i++){
    		System.out.print(nums1[i] + " ");
    	}
    }
}