/*

	two arrays: a,b
	return a.max - b.min, where the index of a.max and b.min are different

*/

import java.util.*;
import java.util.Map.Entry;
public class Solution{
	public static int getMaxSubtract(int[] a, int[] b){
		//<number, index>
		HashMap<Integer, Integer> mapa = new HashMap<Integer, Integer>();
		HashMap<Integer, Integer> mapb = new HashMap<Integer, Integer>();
		for(int i = 0; i < a.length; i++){
			mapa.put(a[i], i);
		}
		for(int i = 0; i < b.length; i++){
			mapb.put(b[i], i);
		}
		
		Set<Entry<Integer, Integer>> seta = mapa.entrySet();
//		 Set<Entry<String, Integer>> set = map.entrySet();
//	        List<Entry<String, Integer>> list = new ArrayList<Entry<String, Integer>>(set);
//	        Collections.sort( list, new Comparator<Map.Entry<String, Integer>>()
//	        {
//	            public int compare( Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2 )
//	            {
//	                return (o2.getValue()).compareTo( o1.getValue() );
//	            }
//	        } );
//	- See more at: http://java2novice.com/java-interview-programs/sort-a-map-by-value/#sthash.F7q3ZqWS.dpuf
	}
	
	public static Comparator<Integer> numComparator = new Comparator<Integer>() {
		public int compare(Integer a, Integer b){
			if(a > b) return 1;
			else if(a == b) return 0;
			else return -1;
 		}
	};
}